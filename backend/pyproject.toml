[project]
name = "ai-financial-assistant-backend"
version = "0.1.0"
description = "FastAPI backend for AI Financial Assistant"
authors = [{name = "Development Team", email = "dev@example.com"}]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.114.0",
    "uvicorn[standard]>=0.24.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.28.1",
    "pytest-cov>=4.0.0",
    "bcrypt>=4.0.0",
    "pyjwt>=2.8.0",
    "python-multipart>=0.0.6",
    "email-validator>=2.0.0",
    "langgraph>=0.0.40",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "fastmcp==2.12.0",
    "plaid-python>=15.0.0",
    "langchain-mcp-adapters>=0.1.9",
    # CRITICAL MISSING DEPENDENCIES - ADDED FOR ARCHITECTURE COMPLIANCE
    # "graphiti-core>=0.1.0",       # Graph database for context - DEFERRED
    # SQLITE PERSISTENCE DEPENDENCIES
    "sqlalchemy>=2.0.0",            # ORM for database operations
    "aiosqlite>=0.19.0",            # Async SQLite driver
    "alembic>=1.12.0",              # Database migrations
    "greenlet>=2.0.0",              # Required for SQLAlchemy async operations
    "sqlmodel>=0.0.14",             # SQLModel for Pydantic + SQLAlchemy integration
]

[project.optional-dependencies]
dev = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]