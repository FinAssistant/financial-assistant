# Application Configuration
APP_NAME=AI Financial Assistant
APP_VERSION=0.1.0
DEBUG=true
ENVIRONMENT=development

# Server Configuration
HOST=0.0.0.0
PORT=8000

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://localhost:5173"]

# Static Files
STATIC_DIR=app/static

# Security
SECRET_KEY=your-secret-key-here-change-in-production

# Database Configuration
DATABASE_URL=sqlite+aiosqlite:///./data/financial_assistant.db
DATABASE_ECHO=false

# LLM Provider Configuration
OPENAI_API_KEY=your-openai-api-key-here
ANTHROPIC_API_KEY=your-anthropic-api-key-here
DEFAULT_LLM_PROVIDER=openai
OPENAI_MODEL=gpt-4o
ANTHROPIC_MODEL=claude-sonnet-4-20250514
LLM_MAX_TOKENS=4096
LLM_TEMPERATURE=0.7
LLM_REQUEST_TIMEOUT=60

# MCP Server Configuration
MCP_SERVER_NAME=financial-assistant-mcp
MCP_SERVER_VERSION=0.1.0
MCP_SERVER_PORT=8001
MCP_LOG_LEVEL=INFO

# Plaid Configuration
PLAID_CLIENT_ID=your-plaid-client-id
PLAID_SECRET=your-plaid-secret
PLAID_ENV=sandbox
# The products listed here will determine which institutions will be available to your users in Link. 
# Only institutions that support all requested products can be selected 
PLAID_PRODUCTS=["identity", "transactions", "liabilities", "investments"]

# Graphiti Configuration
# OpenAI API key required for Graphiti's LLM operations
OPENAI_API_KEY=your-openai-api-key-here
# Graphiti server URL for MCP client connections
GRAPHITI_SERVER_URL=http://localhost:8000/sse
# Optional: Neo4j configuration if using external Neo4j instead of Docker
NEO4J_URI=bolt://neo4j:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=demodemo